//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src-external/com/eclipsesource/json/JsonObject.java
//

#ifndef _FFTJsonObject_H_
#define _FFTJsonObject_H_

@class FFTJsonObject_HashIndexTable;
@class FFTJsonWriter;
@class IOSByteArray;
@class JavaIoObjectInputStream;
@class JavaIoReader;
@protocol JavaUtilList;

#import "JreEmulation.h"
#include "com/eclipsesource/json/JsonValue.h"
#include "java/lang/Iterable.h"
#include "java/util/Iterator.h"

@interface FFTJsonObject : FFTJsonValue < JavaLangIterable > {
 @public
  id<JavaUtilList> names__;
  id<JavaUtilList> values_;
  FFTJsonObject_HashIndexTable *table_;
}

- (id)init;

- (id)initWithFFTJsonObject:(FFTJsonObject *)object;

- (id)initWithFFTJsonObject:(FFTJsonObject *)object
                withBoolean:(BOOL)unmodifiable;

+ (FFTJsonObject *)readFromWithJavaIoReader:(JavaIoReader *)reader;

+ (FFTJsonObject *)readFromWithNSString:(NSString *)string;

+ (FFTJsonObject *)unmodifiableObjectWithFFTJsonObject:(FFTJsonObject *)object;

- (FFTJsonObject *)addWithNSString:(NSString *)name
                           withInt:(int)value;

- (FFTJsonObject *)addWithNSString:(NSString *)name
                          withLong:(long long int)value;

- (FFTJsonObject *)addWithNSString:(NSString *)name
                         withFloat:(float)value;

- (FFTJsonObject *)addWithNSString:(NSString *)name
                        withDouble:(double)value;

- (FFTJsonObject *)addWithNSString:(NSString *)name
                       withBoolean:(BOOL)value;

- (FFTJsonObject *)addWithNSString:(NSString *)name
                      withNSString:(NSString *)value;

- (FFTJsonObject *)addWithNSString:(NSString *)name
                  withFFTJsonValue:(FFTJsonValue *)value;

- (FFTJsonObject *)setWithNSString:(NSString *)name
                           withInt:(int)value;

- (FFTJsonObject *)setWithNSString:(NSString *)name
                          withLong:(long long int)value;

- (FFTJsonObject *)setWithNSString:(NSString *)name
                         withFloat:(float)value;

- (FFTJsonObject *)setWithNSString:(NSString *)name
                        withDouble:(double)value;

- (FFTJsonObject *)setWithNSString:(NSString *)name
                       withBoolean:(BOOL)value;

- (FFTJsonObject *)setWithNSString:(NSString *)name
                      withNSString:(NSString *)value;

- (FFTJsonObject *)setWithNSString:(NSString *)name
                  withFFTJsonValue:(FFTJsonValue *)value;

- (FFTJsonObject *)removeWithNSString:(NSString *)name;

- (FFTJsonObject *)mergeWithFFTJsonObject:(FFTJsonObject *)object;

- (FFTJsonValue *)getWithNSString:(NSString *)name;

- (int)getIntWithNSString:(NSString *)name
                  withInt:(int)defaultValue;

- (long long int)getLongWithNSString:(NSString *)name
                            withLong:(long long int)defaultValue;

- (float)getFloatWithNSString:(NSString *)name
                    withFloat:(float)defaultValue;

- (double)getDoubleWithNSString:(NSString *)name
                     withDouble:(double)defaultValue;

- (BOOL)getBooleanWithNSString:(NSString *)name
                   withBoolean:(BOOL)defaultValue;

- (NSString *)getStringWithNSString:(NSString *)name
                       withNSString:(NSString *)defaultValue;

- (int)size;

- (BOOL)isEmpty;

- (id<JavaUtilList>)names;

- (id<JavaUtilIterator>)iterator;

- (void)writeWithFFTJsonWriter:(FFTJsonWriter *)writer;

- (BOOL)isObject;

- (FFTJsonObject *)asObject;

- (NSUInteger)hash;

- (BOOL)isEqual:(id)obj;

- (int)indexOfWithNSString:(NSString *)name;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inputStream;

- (void)updateHashIndex;

- (void)copyAllFieldsTo:(FFTJsonObject *)other;

@end

__attribute__((always_inline)) inline void FFTJsonObject_init() {}

J2OBJC_FIELD_SETTER(FFTJsonObject, names__, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(FFTJsonObject, values_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(FFTJsonObject, table_, FFTJsonObject_HashIndexTable *)

typedef FFTJsonObject ComEclipsesourceJsonJsonObject;

@interface FFTJsonObject_Member : NSObject {
 @public
  NSString *name_;
  FFTJsonValue *value_;
}

- (id)initWithNSString:(NSString *)name
      withFFTJsonValue:(FFTJsonValue *)value;

- (NSString *)getName;

- (FFTJsonValue *)getValue;

- (NSUInteger)hash;

- (BOOL)isEqual:(id)obj;

- (void)copyAllFieldsTo:(FFTJsonObject_Member *)other;

@end

__attribute__((always_inline)) inline void FFTJsonObject_Member_init() {}

J2OBJC_FIELD_SETTER(FFTJsonObject_Member, name_, NSString *)
J2OBJC_FIELD_SETTER(FFTJsonObject_Member, value_, FFTJsonValue *)

@interface FFTJsonObject_HashIndexTable : NSObject {
 @public
  IOSByteArray *hashTable_;
}

- (id)init;

- (id)initWithFFTJsonObject_HashIndexTable:(FFTJsonObject_HashIndexTable *)original;

- (void)addWithNSString:(NSString *)name
                withInt:(int)index;

- (void)removeWithInt:(int)index;

- (int)getWithId:(id)name;

- (int)hashSlotForWithId:(id)element;

- (void)copyAllFieldsTo:(FFTJsonObject_HashIndexTable *)other;

@end

__attribute__((always_inline)) inline void FFTJsonObject_HashIndexTable_init() {}

J2OBJC_FIELD_SETTER(FFTJsonObject_HashIndexTable, hashTable_, IOSByteArray *)

@interface FFTJsonObject_$1 : NSObject < JavaUtilIterator > {
 @public
  id<JavaUtilIterator> val$namesIterator_;
  id<JavaUtilIterator> val$valuesIterator_;
}

- (BOOL)hasNext;

- (FFTJsonObject_Member *)next;

- (void)remove;

- (id)initWithJavaUtilIterator:(id<JavaUtilIterator>)capture$0
          withJavaUtilIterator:(id<JavaUtilIterator>)capture$1;

@end

__attribute__((always_inline)) inline void FFTJsonObject_$1_init() {}

J2OBJC_FIELD_SETTER(FFTJsonObject_$1, val$namesIterator_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(FFTJsonObject_$1, val$valuesIterator_, id<JavaUtilIterator>)

#endif // _FFTJsonObject_H_
