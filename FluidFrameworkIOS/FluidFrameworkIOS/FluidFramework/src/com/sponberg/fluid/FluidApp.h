//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src-delomboked/com/sponberg/fluid/FluidApp.java
//

#ifndef _FFTFluidApp_H_
#define _FFTFluidApp_H_

@class ComSponbergFluidTrackingTrackingManager;
@class FFTDataModelManager;
@class FFTDatastoreManager;
@class FFTEventsManager;
@class FFTFluidApp_AddActionListenerBuilder;
@class FFTFluidApp_AddWebviewActionListenerBuilder;
@class FFTFluidViewFactory;
@class FFTHttpServiceWrapper_MapModeEnum;
@class FFTImageManager;
@class FFTKVLReader;
@class FFTLaunchOptionsManager;
@class FFTLayout;
@class FFTPrecomputeLayoutManager;
@class FFTPushNotificationManager;
@class FFTScreen;
@class FFTViewBehaviorFactory;
@class FFTViewManager;
@class FFTWebviewEventsManager;
@class IOSObjectArray;
@class JavaUtilArrayList;
@class JavaUtilHashMap;
@protocol FFTActionListener;
@protocol FFTApplicationInitializer;
@protocol FFTApplicationLoader;
@protocol FFTApplicationReloader;
@protocol FFTCallback;
@protocol FFTDatastoreService;
@protocol FFTExternalSDK;
@protocol FFTHttpService;
@protocol FFTKeyValueList;
@protocol FFTLoggingService;
@protocol FFTPlatformSpecifier;
@protocol FFTResourceService;
@protocol FFTScreenListener;
@protocol FFTSecurityService;
@protocol FFTSecurityService_PasswordProvider;
@protocol FFTSystemService;
@protocol FFTUIService;
@protocol FFTWebviewActionListener;
@protocol JavaUtilList;

#import "JreEmulation.h"
#include "java/lang/Runnable.h"
#include "java/lang/Thread.h"

#define FFTFluidApp_useCaching TRUE

@interface FFTFluidApp : NSObject {
 @public
  id<FFTHttpService> httpService_;
  id<FFTUIService> uiService_;
  id<FFTResourceService> resourceService_;
  id<FFTLoggingService> loggingService_;
  id<FFTDatastoreService> datastoreService_;
  id<FFTSystemService> systemService_;
  id<FFTSecurityService> securityService_;
  FFTViewManager *viewManager_;
  FFTImageManager *imageManager_;
  FFTDataModelManager *dataModelManager_;
  FFTDatastoreManager *datastoreManager_;
  FFTEventsManager *eventsManager_;
  FFTWebviewEventsManager *webviewEventsManager_;
  FFTPrecomputeLayoutManager *precomputeLayoutManager_;
  FFTPushNotificationManager *pushNotificationManager_;
  FFTLaunchOptionsManager *launchOptionsManager_;
  JavaUtilArrayList *initializers_;
  JavaUtilArrayList *loaders_;
  JavaUtilArrayList *reloaders_;
  JavaUtilHashMap *defaultsByCategory_;
  JavaUtilHashMap *externalSdks_;
  FFTFluidViewFactory *fluidViewFactory_;
  FFTViewBehaviorFactory *viewBehaviorFactory_;
  ComSponbergFluidTrackingTrackingManager *trackingManager_;
  FFTKVLReader *settings_;
  NSString *platform_;
  id<FFTSecurityService_PasswordProvider> passwordProvider_;
  BOOL initialized_;
  BOOL loaded_;
  BOOL started_;
  NSString *settingsOverride_;
}

- (id)init;

- (void)setHttpServiceWithFFTHttpService:(id<FFTHttpService>)service;

- (void)setHttpServiceRequestParametersMapModeWithFFTHttpServiceWrapper_MapModeEnum:(FFTHttpServiceWrapper_MapModeEnum *)mapMode;

- (void)addInitializerWithFFTApplicationInitializer:(id<FFTApplicationInitializer>)i;

- (void)removeInitializerWithFFTApplicationInitializer:(id<FFTApplicationInitializer>)i;

- (void)addInitializerWithFFTApplicationInitializerArray:(IOSObjectArray *)list;

- (void)setExternalSDKWithNSString:(NSString *)id_
                withFFTExternalSDK:(id<FFTExternalSDK>)sdk;

- (id<FFTExternalSDK>)getExternalSDKWithNSString:(NSString *)id_;

- (ComSponbergFluidTrackingTrackingManager *)getTrackingManager;

- (void)initialize__ OBJC_METHOD_FAMILY_NONE;

- (void)loadAsync;

- (void)loadAsyncWithFFTCallback:(id<FFTCallback>)callback;

- (void)reloadAsync;

- (void)addLoaderWithFFTApplicationLoader:(id<FFTApplicationLoader>)l;

- (void)addLoaderWithFFTApplicationLoaderArray:(IOSObjectArray *)list;

- (void)addReloaderWithFFTApplicationReloader:(id<FFTApplicationReloader>)l;

- (void)addReloaderWithFFTApplicationReloaderArray:(IOSObjectArray *)list;

- (void)load__WithFFTCallback:(id<FFTCallback>)callback;

- (void)reloadWithFFTCallback:(id<FFTCallback>)callback;

- (void)start;

- (void)restart;

- (void)initializeHelper OBJC_METHOD_FAMILY_NONE;

- (void)loadHelper;

- (void)reloadHelper;

- (BOOL)isSupportedOnPlatformWithFFTPlatformSpecifier:(id<FFTPlatformSpecifier>)i;

- (void)setDefaultsWithJavaUtilList:(id<JavaUtilList>)properties;

- (NSString *)getDefaultWithNSString:(NSString *)category
                        withNSString:(NSString *)key;

- (NSString *)getSettingWithNSStringArray:(IOSObjectArray *)keys;

- (NSString *)getSettingsHelperWithFFTKeyValueList:(id<FFTKeyValueList>)list
                                 withNSStringArray:(IOSObjectArray *)keys
                                           withInt:(int)index;

- (void)startApp;

- (void)reStartApp;

- (FFTScreen *)getScreenWithNSString:(NSString *)screenId;

- (id<JavaUtilList>)getTabs;

- (FFTLayout *)getLayoutWithNSString:(NSString *)layoutId;

- (void)setBaseUnitWithDouble:(double)unit;

- (void)setDevicePixelMultiplierWithDouble:(double)devicePixelMultiplier;

- (void)setDevicePixelActualMultiplierWithDouble:(double)devicePixelActualMultiplier;

- (double)sizeToPixelsWithNSString:(NSString *)size;

- (double)unitsToPixelsWithDouble:(double)units;

- (double)pixelsToPixelsWithInt:(int)pixels;

- (double)fontPointsToPixelsWithDouble:(double)points;

- (double)unitsToFontPointsWithDouble:(double)units;

- (double)pixelsToUnitsWithDouble:(double)pixels;

- (void)setDataModelWithNSString:(NSString *)key
                          withId:(id)dataModel;

- (FFTFluidApp_AddActionListenerBuilder *)addActionListenerWithNSStringArray:(IOSObjectArray *)keyPath;

- (FFTFluidApp_AddWebviewActionListenerBuilder *)addWebviewActionListenerWithNSStringArray:(IOSObjectArray *)keyPath;

- (void)addScreenListenerWithNSString:(NSString *)screenId
                withFFTScreenListener:(id<FFTScreenListener>)listener;

- (BOOL)isRecoverFromExceptions;

- (id<FFTHttpService>)getHttpService;

- (id<FFTUIService>)getUiService;

- (id<FFTResourceService>)getResourceService;

- (id<FFTLoggingService>)getLoggingService;

- (id<FFTDatastoreService>)getDatastoreService;

- (id<FFTSystemService>)getSystemService;

- (id<FFTSecurityService>)getSecurityService;

- (FFTViewManager *)getViewManager;

- (FFTImageManager *)getImageManager;

- (FFTDataModelManager *)getDataModelManager;

- (FFTDatastoreManager *)getDatastoreManager;

- (FFTEventsManager *)getEventsManager;

- (FFTWebviewEventsManager *)getWebviewEventsManager;

- (FFTPrecomputeLayoutManager *)getPrecomputeLayoutManager;

- (FFTPushNotificationManager *)getPushNotificationManager;

- (FFTLaunchOptionsManager *)getLaunchOptionsManager;

- (JavaUtilArrayList *)getInitializers;

- (JavaUtilArrayList *)getLoaders;

- (JavaUtilArrayList *)getReloaders;

- (JavaUtilHashMap *)getDefaultsByCategory;

- (JavaUtilHashMap *)getExternalSdks;

- (FFTFluidViewFactory *)getFluidViewFactory;

- (FFTViewBehaviorFactory *)getViewBehaviorFactory;

- (FFTKVLReader *)getSettings;

- (NSString *)getPlatform;

- (id<FFTSecurityService_PasswordProvider>)getPasswordProvider;

- (BOOL)isInitialized;

- (BOOL)isLoaded;

- (BOOL)isStarted;

- (NSString *)getSettingsOverride;

- (void)setUiServiceWithFFTUIService:(id<FFTUIService>)uiService;

- (void)setResourceServiceWithFFTResourceService:(id<FFTResourceService>)resourceService;

- (void)setLoggingServiceWithFFTLoggingService:(id<FFTLoggingService>)loggingService;

- (void)setDatastoreServiceWithFFTDatastoreService:(id<FFTDatastoreService>)datastoreService;

- (void)setSystemServiceWithFFTSystemService:(id<FFTSystemService>)systemService;

- (void)setSecurityServiceWithFFTSecurityService:(id<FFTSecurityService>)securityService;

- (void)setViewManagerWithFFTViewManager:(FFTViewManager *)viewManager;

- (void)setImageManagerWithFFTImageManager:(FFTImageManager *)imageManager;

- (void)setDataModelManagerWithFFTDataModelManager:(FFTDataModelManager *)dataModelManager;

- (void)setDatastoreManagerWithFFTDatastoreManager:(FFTDatastoreManager *)datastoreManager;

- (void)setEventsManagerWithFFTEventsManager:(FFTEventsManager *)eventsManager;

- (void)setWebviewEventsManagerWithFFTWebviewEventsManager:(FFTWebviewEventsManager *)webviewEventsManager;

- (void)setPrecomputeLayoutManagerWithFFTPrecomputeLayoutManager:(FFTPrecomputeLayoutManager *)precomputeLayoutManager;

- (void)setPushNotificationManagerWithFFTPushNotificationManager:(FFTPushNotificationManager *)pushNotificationManager;

- (void)setLaunchOptionsManagerWithFFTLaunchOptionsManager:(FFTLaunchOptionsManager *)launchOptionsManager;

- (void)setInitializersWithJavaUtilArrayList:(JavaUtilArrayList *)initializers;

- (void)setLoadersWithJavaUtilArrayList:(JavaUtilArrayList *)loaders;

- (void)setReloadersWithJavaUtilArrayList:(JavaUtilArrayList *)reloaders;

- (void)setDefaultsByCategoryWithJavaUtilHashMap:(JavaUtilHashMap *)defaultsByCategory;

- (void)setExternalSdksWithJavaUtilHashMap:(JavaUtilHashMap *)externalSdks;

- (void)setFluidViewFactoryWithFFTFluidViewFactory:(FFTFluidViewFactory *)fluidViewFactory;

- (void)setViewBehaviorFactoryWithFFTViewBehaviorFactory:(FFTViewBehaviorFactory *)viewBehaviorFactory;

- (void)setTrackingManagerWithComSponbergFluidTrackingTrackingManager:(ComSponbergFluidTrackingTrackingManager *)trackingManager;

- (void)setSettingsWithFFTKVLReader:(FFTKVLReader *)settings;

- (void)setPlatformWithNSString:(NSString *)platform;

- (void)setPasswordProviderWithFFTSecurityService_PasswordProvider:(id<FFTSecurityService_PasswordProvider>)passwordProvider;

- (void)setInitializedWithBoolean:(BOOL)initialized;

- (void)setLoadedWithBoolean:(BOOL)loaded;

- (void)setStartedWithBoolean:(BOOL)started;

- (void)setSettingsOverrideWithNSString:(NSString *)settingsOverride;

- (void)copyAllFieldsTo:(FFTFluidApp *)other;

@end

__attribute__((always_inline)) inline void FFTFluidApp_init() {}

J2OBJC_FIELD_SETTER(FFTFluidApp, httpService_, id<FFTHttpService>)
J2OBJC_FIELD_SETTER(FFTFluidApp, uiService_, id<FFTUIService>)
J2OBJC_FIELD_SETTER(FFTFluidApp, resourceService_, id<FFTResourceService>)
J2OBJC_FIELD_SETTER(FFTFluidApp, loggingService_, id<FFTLoggingService>)
J2OBJC_FIELD_SETTER(FFTFluidApp, datastoreService_, id<FFTDatastoreService>)
J2OBJC_FIELD_SETTER(FFTFluidApp, systemService_, id<FFTSystemService>)
J2OBJC_FIELD_SETTER(FFTFluidApp, securityService_, id<FFTSecurityService>)
J2OBJC_FIELD_SETTER(FFTFluidApp, viewManager_, FFTViewManager *)
J2OBJC_FIELD_SETTER(FFTFluidApp, imageManager_, FFTImageManager *)
J2OBJC_FIELD_SETTER(FFTFluidApp, dataModelManager_, FFTDataModelManager *)
J2OBJC_FIELD_SETTER(FFTFluidApp, datastoreManager_, FFTDatastoreManager *)
J2OBJC_FIELD_SETTER(FFTFluidApp, eventsManager_, FFTEventsManager *)
J2OBJC_FIELD_SETTER(FFTFluidApp, webviewEventsManager_, FFTWebviewEventsManager *)
J2OBJC_FIELD_SETTER(FFTFluidApp, precomputeLayoutManager_, FFTPrecomputeLayoutManager *)
J2OBJC_FIELD_SETTER(FFTFluidApp, pushNotificationManager_, FFTPushNotificationManager *)
J2OBJC_FIELD_SETTER(FFTFluidApp, launchOptionsManager_, FFTLaunchOptionsManager *)
J2OBJC_FIELD_SETTER(FFTFluidApp, initializers_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(FFTFluidApp, loaders_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(FFTFluidApp, reloaders_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(FFTFluidApp, defaultsByCategory_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(FFTFluidApp, externalSdks_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(FFTFluidApp, fluidViewFactory_, FFTFluidViewFactory *)
J2OBJC_FIELD_SETTER(FFTFluidApp, viewBehaviorFactory_, FFTViewBehaviorFactory *)
J2OBJC_FIELD_SETTER(FFTFluidApp, trackingManager_, ComSponbergFluidTrackingTrackingManager *)
J2OBJC_FIELD_SETTER(FFTFluidApp, settings_, FFTKVLReader *)
J2OBJC_FIELD_SETTER(FFTFluidApp, platform_, NSString *)
J2OBJC_FIELD_SETTER(FFTFluidApp, passwordProvider_, id<FFTSecurityService_PasswordProvider>)
J2OBJC_FIELD_SETTER(FFTFluidApp, settingsOverride_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(FFTFluidApp, useCaching, BOOL)

typedef FFTFluidApp ComSponbergFluidFluidApp;

@interface FFTFluidApp_AddActionListenerBuilder : NSObject {
 @public
  FFTFluidApp *this$0_;
  IOSObjectArray *keyPath_;
}

- (FFTFluidApp_AddActionListenerBuilder *)listenerWithFFTActionListener:(id<FFTActionListener>)listener;

- (id)initWithFFTFluidApp:(FFTFluidApp *)outer$;

- (void)copyAllFieldsTo:(FFTFluidApp_AddActionListenerBuilder *)other;

@end

__attribute__((always_inline)) inline void FFTFluidApp_AddActionListenerBuilder_init() {}

J2OBJC_FIELD_SETTER(FFTFluidApp_AddActionListenerBuilder, this$0_, FFTFluidApp *)
J2OBJC_FIELD_SETTER(FFTFluidApp_AddActionListenerBuilder, keyPath_, IOSObjectArray *)

@interface FFTFluidApp_AddWebviewActionListenerBuilder : NSObject {
 @public
  FFTFluidApp *this$0_;
  IOSObjectArray *keyPath_;
}

- (FFTFluidApp_AddWebviewActionListenerBuilder *)listenerWithFFTWebviewActionListener:(id<FFTWebviewActionListener>)listener;

- (id)initWithFFTFluidApp:(FFTFluidApp *)outer$;

- (void)copyAllFieldsTo:(FFTFluidApp_AddWebviewActionListenerBuilder *)other;

@end

__attribute__((always_inline)) inline void FFTFluidApp_AddWebviewActionListenerBuilder_init() {}

J2OBJC_FIELD_SETTER(FFTFluidApp_AddWebviewActionListenerBuilder, this$0_, FFTFluidApp *)
J2OBJC_FIELD_SETTER(FFTFluidApp_AddWebviewActionListenerBuilder, keyPath_, IOSObjectArray *)

@interface FFTFluidApp_$1 : JavaLangThread {
 @public
  FFTFluidApp *this$0_;
  id<FFTCallback> val$callback_;
}

- (void)run;

- (id)initWithFFTFluidApp:(FFTFluidApp *)outer$
          withFFTCallback:(id<FFTCallback>)capture$0;

@end

__attribute__((always_inline)) inline void FFTFluidApp_$1_init() {}

J2OBJC_FIELD_SETTER(FFTFluidApp_$1, this$0_, FFTFluidApp *)
J2OBJC_FIELD_SETTER(FFTFluidApp_$1, val$callback_, id<FFTCallback>)

@interface FFTFluidApp_$1_$1 : NSObject < JavaLangRunnable > {
 @public
  FFTFluidApp_$1 *this$0_;
}

- (void)run;

- (id)initWithFFTFluidApp_$1:(FFTFluidApp_$1 *)outer$;

@end

__attribute__((always_inline)) inline void FFTFluidApp_$1_$1_init() {}

J2OBJC_FIELD_SETTER(FFTFluidApp_$1_$1, this$0_, FFTFluidApp_$1 *)

@interface FFTFluidApp_$2 : JavaLangThread {
 @public
  FFTFluidApp *this$0_;
}

- (void)run;

- (id)initWithFFTFluidApp:(FFTFluidApp *)outer$;

@end

__attribute__((always_inline)) inline void FFTFluidApp_$2_init() {}

J2OBJC_FIELD_SETTER(FFTFluidApp_$2, this$0_, FFTFluidApp *)

@interface FFTFluidApp_$2_$1 : NSObject < JavaLangRunnable > {
 @public
  FFTFluidApp_$2 *this$0_;
}

- (void)run;

- (id)initWithFFTFluidApp_$2:(FFTFluidApp_$2 *)outer$;

@end

__attribute__((always_inline)) inline void FFTFluidApp_$2_$1_init() {}

J2OBJC_FIELD_SETTER(FFTFluidApp_$2_$1, this$0_, FFTFluidApp_$2 *)

#endif // _FFTFluidApp_H_
