//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src-delomboked/com/sponberg/fluid/datastore/DatastoreTransaction.java
//

#ifndef _FFTDatastoreTransaction_H_
#define _FFTDatastoreTransaction_H_

@class FFTDatastoreManager_Database;
@class FFTDatastoreTransaction_QueryBuilder;
@class FFTDatastoreTransaction_QueryFunctionBuilder;
@class FFTDatastoreTransaction_QueryJoinBuilder3;
@class FFTDatastoreTransaction_QueryJoinBuilder;
@class FFTDatastoreTransaction_UpdateBuilder;
@class FFTSQLQuery;
@class FFTSQLResultList;
@class IOSClass;
@class IOSObjectArray;
@class JavaLangInteger;
@class JavaLangLong;
@class JavaUtilArrayList;
@class JavaUtilConcurrentLocksReentrantLock;
@class JavaUtilLinkedHashMap;
@protocol FFTDatastoreService;
@protocol FFTSQLDataInput;
@protocol FFTSQLTable;

#import "JreEmulation.h"

@interface FFTDatastoreTransaction : NSObject {
 @public
  id<FFTDatastoreService> ds_;
  BOOL started_;
  BOOL committed_;
  BOOL rolledBack_;
  FFTDatastoreManager_Database *database_;
}

- (id)init;

- (id)initWithNSString:(NSString *)databaseName;

- (void)start;

- (void)commit;

- (void)rollback;

- (void)executeRawStatementWithNSString:(NSString *)statement;

- (FFTSQLResultList *)queryWithFFTSQLQuery:(FFTSQLQuery *)query;

- (FFTDatastoreTransaction_QueryBuilder *)queryWithIOSClass:(IOSClass *)queryResultClass;

- (FFTDatastoreTransaction_QueryJoinBuilder *)queryJoinWithIOSClass:(IOSClass *)queryResultClass
                                                       withIOSClass:(IOSClass *)queryResultClass2;

- (FFTDatastoreTransaction_QueryJoinBuilder3 *)queryJoinWithIOSClass:(IOSClass *)queryResultClass
                                                        withIOSClass:(IOSClass *)queryResultClass2
                                                        withIOSClass:(IOSClass *)queryResultClass3;

- (FFTDatastoreTransaction_QueryFunctionBuilder *)queryFunctionWithNSString:(NSString *)function
                                                               withIOSClass:(IOSClass *)queryResultClass;

- (FFTDatastoreTransaction_UpdateBuilder *)updateWithId:(id<FFTSQLDataInput, FFTSQLTable>)object;

- (JavaLangLong *)insertWithId:(id<FFTSQLDataInput, FFTSQLTable>)object;

- (void)copyAllFieldsTo:(FFTDatastoreTransaction *)other;

@end

FOUNDATION_EXPORT BOOL FFTDatastoreTransaction_initialized;
J2OBJC_STATIC_INIT(FFTDatastoreTransaction)

J2OBJC_FIELD_SETTER(FFTDatastoreTransaction, ds_, id<FFTDatastoreService>)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction, database_, FFTDatastoreManager_Database *)

FOUNDATION_EXPORT JavaUtilConcurrentLocksReentrantLock *FFTDatastoreTransaction_lock_;
J2OBJC_STATIC_FIELD_GETTER(FFTDatastoreTransaction, lock_, JavaUtilConcurrentLocksReentrantLock *)

typedef FFTDatastoreTransaction ComSponbergFluidDatastoreDatastoreTransaction;

@interface FFTDatastoreTransaction_UpdateBuilder : NSObject {
 @public
  FFTDatastoreTransaction *this$0_;
  id<FFTSQLDataInput, FFTSQLTable> object_;
  NSString *where__;
  JavaUtilArrayList *paramNames_;
  JavaUtilArrayList *paramValues_;
}

- (id)initWithFFTDatastoreTransaction:(FFTDatastoreTransaction *)outer$
                               withId:(id<FFTSQLDataInput, FFTSQLTable>)object;

- (FFTDatastoreTransaction_UpdateBuilder *)whereWithNSString:(NSString *)where;

- (FFTDatastoreTransaction_UpdateBuilder *)paramWithNSString:(NSString *)name
                                                      withId:(id)value;

- (void)execute;

- (void)copyAllFieldsTo:(FFTDatastoreTransaction_UpdateBuilder *)other;

@end

__attribute__((always_inline)) inline void FFTDatastoreTransaction_UpdateBuilder_init() {}

J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_UpdateBuilder, this$0_, FFTDatastoreTransaction *)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_UpdateBuilder, object_, id)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_UpdateBuilder, where__, NSString *)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_UpdateBuilder, paramNames_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_UpdateBuilder, paramValues_, JavaUtilArrayList *)

@interface FFTDatastoreTransaction_QueryBuilderBase : NSObject {
 @public
  NSString *where_;
  JavaUtilArrayList *paramNames_;
  JavaUtilArrayList *paramValues_;
  int offset_;
  JavaLangInteger *limit_;
  BOOL allowRefresh_;
  NSString *orderBy_;
  NSString *groupBy_;
}

- (id)initWithFFTDatastoreTransaction:(FFTDatastoreTransaction *)outer$;

- (void)copyAllFieldsTo:(FFTDatastoreTransaction_QueryBuilderBase *)other;

@end

__attribute__((always_inline)) inline void FFTDatastoreTransaction_QueryBuilderBase_init() {}

J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryBuilderBase, where_, NSString *)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryBuilderBase, paramNames_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryBuilderBase, paramValues_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryBuilderBase, limit_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryBuilderBase, orderBy_, NSString *)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryBuilderBase, groupBy_, NSString *)

@interface FFTDatastoreTransaction_QueryBuilder : FFTDatastoreTransaction_QueryBuilderBase {
 @public
  FFTDatastoreTransaction *this$1_;
  IOSClass *queryResultClass_;
  IOSObjectArray *columns_;
}

- (id)initWithFFTDatastoreTransaction:(FFTDatastoreTransaction *)outer$
                         withIOSClass:(IOSClass *)queryResultClass;

- (FFTDatastoreTransaction_QueryBuilder *)selectWithNSStringArray:(IOSObjectArray *)columns;

- (FFTDatastoreTransaction_QueryBuilder *)whereWithNSString:(NSString *)where;

- (FFTDatastoreTransaction_QueryBuilder *)paramWithNSString:(NSString *)name
                                                     withId:(id)value;

- (FFTDatastoreTransaction_QueryBuilder *)offsetWithInt:(int)offset;

- (FFTDatastoreTransaction_QueryBuilder *)limitWithInt:(int)limit;

- (FFTDatastoreTransaction_QueryBuilder *)allowRefreshWithBoolean:(BOOL)allowRefresh;

- (FFTDatastoreTransaction_QueryBuilder *)orderByWithNSString:(NSString *)orderBy;

- (FFTDatastoreTransaction_QueryBuilder *)groupByWithNSString:(NSString *)groupBy;

- (FFTSQLResultList *)execute;

- (void)copyAllFieldsTo:(FFTDatastoreTransaction_QueryBuilder *)other;

@end

__attribute__((always_inline)) inline void FFTDatastoreTransaction_QueryBuilder_init() {}

J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryBuilder, this$1_, FFTDatastoreTransaction *)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryBuilder, queryResultClass_, IOSClass *)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryBuilder, columns_, IOSObjectArray *)

@interface FFTDatastoreTransaction_QueryFunctionBuilder : FFTDatastoreTransaction_QueryBuilderBase {
 @public
  FFTDatastoreTransaction *this$1_;
  NSString *aggregateFunction_;
  NSString *table_;
}

- (id)initWithFFTDatastoreTransaction:(FFTDatastoreTransaction *)outer$
                         withNSString:(NSString *)aggregateFunction
                         withNSString:(NSString *)table;

- (FFTDatastoreTransaction_QueryFunctionBuilder *)whereWithNSString:(NSString *)where;

- (FFTDatastoreTransaction_QueryFunctionBuilder *)paramWithNSString:(NSString *)name
                                                             withId:(id)value;

- (FFTDatastoreTransaction_QueryFunctionBuilder *)offsetWithInt:(int)offset;

- (FFTDatastoreTransaction_QueryFunctionBuilder *)limitWithInt:(int)limit;

- (FFTSQLResultList *)execute;

- (void)copyAllFieldsTo:(FFTDatastoreTransaction_QueryFunctionBuilder *)other;

@end

__attribute__((always_inline)) inline void FFTDatastoreTransaction_QueryFunctionBuilder_init() {}

J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryFunctionBuilder, this$1_, FFTDatastoreTransaction *)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryFunctionBuilder, aggregateFunction_, NSString *)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryFunctionBuilder, table_, NSString *)

@interface FFTDatastoreTransaction_QueryJoinBuilder : FFTDatastoreTransaction_QueryBuilderBase {
 @public
  FFTDatastoreTransaction *this$1_;
  IOSClass *queryResultClass_;
  IOSClass *queryResultClass2_;
  JavaUtilLinkedHashMap *columnsByTablename_;
}

- (id)initWithFFTDatastoreTransaction:(FFTDatastoreTransaction *)outer$
                         withIOSClass:(IOSClass *)queryResultClass
                         withIOSClass:(IOSClass *)queryResultClass2;

- (FFTDatastoreTransaction_QueryJoinBuilder *)selectWithIOSClass:(IOSClass *)queryResultClass
                                               withNSStringArray:(IOSObjectArray *)columns;

- (FFTDatastoreTransaction_QueryJoinBuilder *)whereWithNSString:(NSString *)where;

- (FFTDatastoreTransaction_QueryJoinBuilder *)paramWithIOSClass:(IOSClass *)queryResultClass
                                                   withNSString:(NSString *)name
                                                         withId:(id)value;

- (FFTDatastoreTransaction_QueryJoinBuilder *)paramWithIOSClass:(IOSClass *)queryResultClass
                                                   withNSString:(NSString *)name
                                                   withIOSClass:(IOSClass *)queryResultClass2
                                                   withNSString:(NSString *)name2;

- (FFTDatastoreTransaction_QueryJoinBuilder *)offsetWithInt:(int)offset;

- (FFTDatastoreTransaction_QueryJoinBuilder *)limitWithInt:(int)limit;

- (FFTDatastoreTransaction_QueryJoinBuilder *)orderByWithNSString:(NSString *)orderBy;

- (FFTSQLResultList *)execute;

- (void)copyAllFieldsTo:(FFTDatastoreTransaction_QueryJoinBuilder *)other;

@end

__attribute__((always_inline)) inline void FFTDatastoreTransaction_QueryJoinBuilder_init() {}

J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryJoinBuilder, this$1_, FFTDatastoreTransaction *)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryJoinBuilder, queryResultClass_, IOSClass *)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryJoinBuilder, queryResultClass2_, IOSClass *)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryJoinBuilder, columnsByTablename_, JavaUtilLinkedHashMap *)

@interface FFTDatastoreTransaction_QueryJoinBuilder3 : FFTDatastoreTransaction_QueryBuilderBase {
 @public
  FFTDatastoreTransaction *this$1_;
  IOSClass *queryResultClass_;
  IOSClass *queryResultClass2_;
  IOSClass *queryResultClass3_;
  JavaUtilLinkedHashMap *columnsByTablename_;
}

- (id)initWithFFTDatastoreTransaction:(FFTDatastoreTransaction *)outer$
                         withIOSClass:(IOSClass *)queryResultClass
                         withIOSClass:(IOSClass *)queryResultClass2
                         withIOSClass:(IOSClass *)queryResultClass3;

- (FFTDatastoreTransaction_QueryJoinBuilder3 *)selectWithIOSClass:(IOSClass *)queryResultClass
                                                withNSStringArray:(IOSObjectArray *)columns;

- (FFTDatastoreTransaction_QueryJoinBuilder3 *)whereWithNSString:(NSString *)where;

- (FFTDatastoreTransaction_QueryJoinBuilder3 *)paramWithIOSClass:(IOSClass *)queryResultClass
                                                    withNSString:(NSString *)name
                                                          withId:(id)value;

- (FFTDatastoreTransaction_QueryJoinBuilder3 *)paramWithIOSClass:(IOSClass *)queryResultClass
                                                    withNSString:(NSString *)name
                                                    withIOSClass:(IOSClass *)queryResultClass2
                                                    withNSString:(NSString *)name2;

- (FFTDatastoreTransaction_QueryJoinBuilder3 *)offsetWithInt:(int)offset;

- (FFTDatastoreTransaction_QueryJoinBuilder3 *)limitWithInt:(int)limit;

- (FFTDatastoreTransaction_QueryJoinBuilder3 *)orderByWithNSString:(NSString *)orderBy;

- (FFTSQLResultList *)execute;

- (void)copyAllFieldsTo:(FFTDatastoreTransaction_QueryJoinBuilder3 *)other;

@end

__attribute__((always_inline)) inline void FFTDatastoreTransaction_QueryJoinBuilder3_init() {}

J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryJoinBuilder3, this$1_, FFTDatastoreTransaction *)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryJoinBuilder3, queryResultClass_, IOSClass *)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryJoinBuilder3, queryResultClass2_, IOSClass *)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryJoinBuilder3, queryResultClass3_, IOSClass *)
J2OBJC_FIELD_SETTER(FFTDatastoreTransaction_QueryJoinBuilder3, columnsByTablename_, JavaUtilLinkedHashMap *)

#endif // _FFTDatastoreTransaction_H_
