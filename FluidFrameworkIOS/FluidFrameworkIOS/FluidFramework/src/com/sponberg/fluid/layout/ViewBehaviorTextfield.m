//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src-delomboked/com/sponberg/fluid/layout/ViewBehaviorTextfield.java
//

#include "IOSClass.h"
#include "com/sponberg/fluid/FluidApp.h"
#include "com/sponberg/fluid/GlobalState.h"
#include "com/sponberg/fluid/layout/Color.h"
#include "com/sponberg/fluid/layout/DataModelManager.h"
#include "com/sponberg/fluid/layout/ViewBehavior.h"
#include "com/sponberg/fluid/layout/ViewBehaviorTextfield.h"
#include "com/sponberg/fluid/layout/ViewManager.h"
#include "com/sponberg/fluid/util/KeyValueList.h"
#include "java/lang/Boolean.h"
#include "java/lang/Double.h"

@implementation FFTViewBehaviorTextfield

NSString * FFTViewBehaviorTextfield_kKeyboardDefault_ = @"default";
NSString * FFTViewBehaviorTextfield_kKeyboardAlphabet_ = @"alphabet";
NSString * FFTViewBehaviorTextfield_kKeyboardEmail_ = @"email";
NSString * FFTViewBehaviorTextfield_kKeyboardUrl_ = @"url";
NSString * FFTViewBehaviorTextfield_kKeyboardNumber_ = @"number";
NSString * FFTViewBehaviorTextfield_kKeyboardPhone_ = @"phone";
NSString * FFTViewBehaviorTextfield_kBorderStyleDefault_ = @"default";
NSString * FFTViewBehaviorTextfield_kBorderStyleNone_ = @"none";

- (id)initWithFFTKeyValueList:(id<FFTKeyValueList>)properties {
  if (self = [super initWithNSString:FFTViewBehavior_get_textfield_() withFFTKeyValueList:properties]) {
    self->label_ViewBehaviorTextfield_ = [FFTViewBehavior getStringPropertyWithNSString:@"label" withNSString:nil withFFTKeyValueList:properties];
    self->keyboard_ = [FFTViewBehavior getStringPropertyWithNSString:@"keyboard" withNSString:@"default" withFFTKeyValueList:properties];
    self->dismissKeyboardWithTap_ = [((JavaLangBoolean *) nil_chk([FFTViewBehavior getBooleanPropertyWithNSString:@"dismissKeyboardWithTap" withBoolean:YES withFFTKeyValueList:properties])) booleanValue];
    self->borderStyle_ = [FFTViewBehavior getStringPropertyWithNSString:@"border-style" withNSString:nil withFFTKeyValueList:properties];
    self->multiLine_ = [((JavaLangBoolean *) nil_chk([FFTViewBehavior getBooleanPropertyWithNSString:@"multi-line" withBoolean:NO withFFTKeyValueList:properties])) booleanValue];
    self->autoCorrect_ = [((JavaLangBoolean *) nil_chk([FFTViewBehavior getBooleanPropertyWithNSString:@"auto-correct" withBoolean:[((NSString *) nil_chk(self->keyboard_)) isEqual:@"default"] withFFTKeyValueList:properties])) booleanValue];
    self->capitalize_ = [FFTViewBehavior getStringPropertyWithNSString:@"capitalize" withNSString:nil withFFTKeyValueList:properties];
    self->password_ = [((JavaLangBoolean *) nil_chk([FFTViewBehavior getBooleanPropertyWithNSString:@"password" withBoolean:NO withFFTKeyValueList:properties])) booleanValue];
    self->placeholderTextColor_ = [self getColorPropertyWithNSString:@"placeholder-text-color" withFFTColor:nil withFFTKeyValueList:properties];
    self->enabledKey_ = [FFTViewBehavior getStringPropertyWithNSString:@"enabled-key" withNSString:nil withFFTKeyValueList:properties];
    self->formattedPlaceholder_ = [FFTViewBehavior getStringPropertyWithNSString:@"formatted-placeholder" withNSString:nil withFFTKeyValueList:properties];
    self->androidLineColor_ = [self getColorPropertyWithNSString:@"android-line-color" withFFTColor:nil withFFTKeyValueList:properties];
    self->textEnabledColor_ = [self getColorPropertyWithNSString:@"text-enabled-color" withFFTColor:nil withFFTKeyValueList:properties];
    self->textDisabledColor_ = [self getColorPropertyWithNSString:@"text-disabled-color" withFFTColor:nil withFFTKeyValueList:properties];
    NSString *specifiedDefaultFontName = [((FFTViewManager *) nil_chk([((FFTFluidApp *) nil_chk(FFTGlobalState_get_fluidApp__())) getViewManager])) getSpecifiedDefaultFontFamilyName];
    self->fontFamilyName_ = [FFTViewBehavior getFontFamilyNameWithNSString:@"font-family" withNSString:specifiedDefaultFontName withFFTKeyValueList:properties];
    NSString *specifiedDefaultFontStyle = [((FFTViewManager *) nil_chk([FFTGlobalState_get_fluidApp__() getViewManager])) getSpecifiedDefaultFontStyle];
    self->fontStyle_ = [FFTViewBehavior getFontStyleWithNSString:@"font-style" withNSString:specifiedDefaultFontStyle withFFTKeyValueList:properties];
    self->fontSize_ = [FFTViewBehavior getFontSizePropertyWithNSString:@"font-size" withJavaLangDouble:nil withFFTKeyValueList:properties];
  }
  return self;
}

+ (BOOL)getBooleanWithNSString:(NSString *)dismissKeyboardWithTap
                   withBoolean:(BOOL)defaultValue {
  if (dismissKeyboardWithTap == nil) {
    return defaultValue;
  }
  else if ([dismissKeyboardWithTap equalsIgnoreCase:@"true"]) {
    return YES;
  }
  else if ([dismissKeyboardWithTap equalsIgnoreCase:@"false"]) {
    return NO;
  }
  else {
    return defaultValue;
  }
}

- (BOOL)isViewFactorySetsBackground {
  return YES;
}

- (BOOL)isEnabledWithNSString:(NSString *)dataModelPrefix {
  if (self->enabledKey_ == nil) {
    return YES;
  }
  else {
    return [((FFTDataModelManager *) nil_chk([((FFTFluidApp *) nil_chk(FFTGlobalState_get_fluidApp__())) getDataModelManager])) checkConditionWithNSString:enabledKey_ withNSString:dataModelPrefix];
  }
}

- (NSString *)description {
  return [NSString stringWithFormat:@"ViewBehaviorTextfield(label=%@, keyboard=%@, borderStyle=%@, dismissKeyboardWithTap=%@, multiLine=%@, autoCorrect=%@, password=%@, placeholderTextColor=%@, textEnabledColor=%@, textDisabledColor=%@, enabledKey=%@, formattedPlaceholder=%@, capitalize=%@, androidLineColor=%@, fontFamilyName=%@, fontStyle=%@, fontSize=%@)", [self getLabel], [self getKeyboard], [self getBorderStyle], [JavaLangBoolean toStringWithBoolean:[self isDismissKeyboardWithTap]], [JavaLangBoolean toStringWithBoolean:[self isMultiLine]], [JavaLangBoolean toStringWithBoolean:[self isAutoCorrect]], [JavaLangBoolean toStringWithBoolean:[self isPassword]], [self getPlaceholderTextColor], [self getTextEnabledColor], [self getTextDisabledColor], [self getEnabledKey], [self getFormattedPlaceholder], [self getCapitalize], [self getAndroidLineColor], [self getFontFamilyName], [self getFontStyle], [self getFontSize]];
}

- (NSString *)getLabel {
  return self->label_ViewBehaviorTextfield_;
}

- (NSString *)getKeyboard {
  return self->keyboard_;
}

- (NSString *)getBorderStyle {
  return self->borderStyle_;
}

- (BOOL)isDismissKeyboardWithTap {
  return self->dismissKeyboardWithTap_;
}

- (BOOL)isMultiLine {
  return self->multiLine_;
}

- (BOOL)isAutoCorrect {
  return self->autoCorrect_;
}

- (BOOL)isPassword {
  return self->password_;
}

- (FFTColor *)getPlaceholderTextColor {
  return self->placeholderTextColor_;
}

- (FFTColor *)getTextEnabledColor {
  return self->textEnabledColor_;
}

- (FFTColor *)getTextDisabledColor {
  return self->textDisabledColor_;
}

- (NSString *)getEnabledKey {
  return self->enabledKey_;
}

- (NSString *)getFormattedPlaceholder {
  return self->formattedPlaceholder_;
}

- (NSString *)getCapitalize {
  return self->capitalize_;
}

- (FFTColor *)getAndroidLineColor {
  return self->androidLineColor_;
}

- (NSString *)getFontFamilyName {
  return self->fontFamilyName_;
}

- (NSString *)getFontStyle {
  return self->fontStyle_;
}

- (JavaLangDouble *)getFontSize {
  return self->fontSize_;
}

- (void)setLabelWithNSString:(NSString *)label {
  self->label_ViewBehaviorTextfield_ = label;
}

- (void)setKeyboardWithNSString:(NSString *)keyboard {
  self->keyboard_ = keyboard;
}

- (void)setBorderStyleWithNSString:(NSString *)borderStyle {
  self->borderStyle_ = borderStyle;
}

- (void)setDismissKeyboardWithTapWithBoolean:(BOOL)dismissKeyboardWithTap {
  self->dismissKeyboardWithTap_ = dismissKeyboardWithTap;
}

- (void)setMultiLineWithBoolean:(BOOL)multiLine {
  self->multiLine_ = multiLine;
}

- (void)setAutoCorrectWithBoolean:(BOOL)autoCorrect {
  self->autoCorrect_ = autoCorrect;
}

- (void)setPasswordWithBoolean:(BOOL)password {
  self->password_ = password;
}

- (void)setPlaceholderTextColorWithFFTColor:(FFTColor *)placeholderTextColor {
  self->placeholderTextColor_ = placeholderTextColor;
}

- (void)setTextEnabledColorWithFFTColor:(FFTColor *)textEnabledColor {
  self->textEnabledColor_ = textEnabledColor;
}

- (void)setTextDisabledColorWithFFTColor:(FFTColor *)textDisabledColor {
  self->textDisabledColor_ = textDisabledColor;
}

- (void)setEnabledKeyWithNSString:(NSString *)enabledKey {
  self->enabledKey_ = enabledKey;
}

- (void)setFormattedPlaceholderWithNSString:(NSString *)formattedPlaceholder {
  self->formattedPlaceholder_ = formattedPlaceholder;
}

- (void)setCapitalizeWithNSString:(NSString *)capitalize {
  self->capitalize_ = capitalize;
}

- (void)setAndroidLineColorWithFFTColor:(FFTColor *)androidLineColor {
  self->androidLineColor_ = androidLineColor;
}

- (void)setFontFamilyNameWithNSString:(NSString *)fontFamilyName {
  self->fontFamilyName_ = fontFamilyName;
}

- (void)setFontStyleWithNSString:(NSString *)fontStyle {
  self->fontStyle_ = fontStyle;
}

- (void)setFontSizeWithJavaLangDouble:(JavaLangDouble *)fontSize {
  self->fontSize_ = fontSize;
}

- (void)copyAllFieldsTo:(FFTViewBehaviorTextfield *)other {
  [super copyAllFieldsTo:other];
  other->androidLineColor_ = androidLineColor_;
  other->autoCorrect_ = autoCorrect_;
  other->borderStyle_ = borderStyle_;
  other->capitalize_ = capitalize_;
  other->dismissKeyboardWithTap_ = dismissKeyboardWithTap_;
  other->enabledKey_ = enabledKey_;
  other->fontFamilyName_ = fontFamilyName_;
  other->fontSize_ = fontSize_;
  other->fontStyle_ = fontStyle_;
  other->formattedPlaceholder_ = formattedPlaceholder_;
  other->keyboard_ = keyboard_;
  other->label_ViewBehaviorTextfield_ = label_ViewBehaviorTextfield_;
  other->multiLine_ = multiLine_;
  other->password_ = password_;
  other->placeholderTextColor_ = placeholderTextColor_;
  other->textDisabledColor_ = textDisabledColor_;
  other->textEnabledColor_ = textEnabledColor_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithFFTKeyValueList:", "ViewBehaviorTextfield", NULL, 0x1, NULL },
    { "getBooleanWithNSString:withBoolean:", "getBoolean", "Z", 0x8, NULL },
    { "isViewFactorySetsBackground", NULL, "Z", 0x1, NULL },
    { "isEnabledWithNSString:", "isEnabled", "Z", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "getLabel", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getKeyboard", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getBorderStyle", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "isDismissKeyboardWithTap", NULL, "Z", 0x1, NULL },
    { "isMultiLine", NULL, "Z", 0x1, NULL },
    { "isAutoCorrect", NULL, "Z", 0x1, NULL },
    { "isPassword", NULL, "Z", 0x1, NULL },
    { "getPlaceholderTextColor", NULL, "Lcom.sponberg.fluid.layout.Color;", 0x1, NULL },
    { "getTextEnabledColor", NULL, "Lcom.sponberg.fluid.layout.Color;", 0x1, NULL },
    { "getTextDisabledColor", NULL, "Lcom.sponberg.fluid.layout.Color;", 0x1, NULL },
    { "getEnabledKey", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getFormattedPlaceholder", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getCapitalize", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getAndroidLineColor", NULL, "Lcom.sponberg.fluid.layout.Color;", 0x1, NULL },
    { "getFontFamilyName", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getFontStyle", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getFontSize", NULL, "Ljava.lang.Double;", 0x1, NULL },
    { "setLabelWithNSString:", "setLabel", "V", 0x1, NULL },
    { "setKeyboardWithNSString:", "setKeyboard", "V", 0x1, NULL },
    { "setBorderStyleWithNSString:", "setBorderStyle", "V", 0x1, NULL },
    { "setDismissKeyboardWithTapWithBoolean:", "setDismissKeyboardWithTap", "V", 0x1, NULL },
    { "setMultiLineWithBoolean:", "setMultiLine", "V", 0x1, NULL },
    { "setAutoCorrectWithBoolean:", "setAutoCorrect", "V", 0x1, NULL },
    { "setPasswordWithBoolean:", "setPassword", "V", 0x1, NULL },
    { "setPlaceholderTextColorWithFFTColor:", "setPlaceholderTextColor", "V", 0x1, NULL },
    { "setTextEnabledColorWithFFTColor:", "setTextEnabledColor", "V", 0x1, NULL },
    { "setTextDisabledColorWithFFTColor:", "setTextDisabledColor", "V", 0x1, NULL },
    { "setEnabledKeyWithNSString:", "setEnabledKey", "V", 0x1, NULL },
    { "setFormattedPlaceholderWithNSString:", "setFormattedPlaceholder", "V", 0x1, NULL },
    { "setCapitalizeWithNSString:", "setCapitalize", "V", 0x1, NULL },
    { "setAndroidLineColorWithFFTColor:", "setAndroidLineColor", "V", 0x1, NULL },
    { "setFontFamilyNameWithNSString:", "setFontFamilyName", "V", 0x1, NULL },
    { "setFontStyleWithNSString:", "setFontStyle", "V", 0x1, NULL },
    { "setFontSizeWithJavaLangDouble:", "setFontSize", "V", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "kKeyboardDefault_", NULL, 0x19, "Ljava.lang.String;", &FFTViewBehaviorTextfield_kKeyboardDefault_,  },
    { "kKeyboardAlphabet_", NULL, 0x19, "Ljava.lang.String;", &FFTViewBehaviorTextfield_kKeyboardAlphabet_,  },
    { "kKeyboardEmail_", NULL, 0x19, "Ljava.lang.String;", &FFTViewBehaviorTextfield_kKeyboardEmail_,  },
    { "kKeyboardUrl_", NULL, 0x19, "Ljava.lang.String;", &FFTViewBehaviorTextfield_kKeyboardUrl_,  },
    { "kKeyboardNumber_", NULL, 0x19, "Ljava.lang.String;", &FFTViewBehaviorTextfield_kKeyboardNumber_,  },
    { "kKeyboardPhone_", NULL, 0x19, "Ljava.lang.String;", &FFTViewBehaviorTextfield_kKeyboardPhone_,  },
    { "kBorderStyleDefault_", NULL, 0x19, "Ljava.lang.String;", &FFTViewBehaviorTextfield_kBorderStyleDefault_,  },
    { "kBorderStyleNone_", NULL, 0x19, "Ljava.lang.String;", &FFTViewBehaviorTextfield_kBorderStyleNone_,  },
    { "label_ViewBehaviorTextfield_", "label", 0x0, "Ljava.lang.String;", NULL,  },
    { "keyboard_", NULL, 0x0, "Ljava.lang.String;", NULL,  },
    { "borderStyle_", NULL, 0x0, "Ljava.lang.String;", NULL,  },
    { "dismissKeyboardWithTap_", NULL, 0x0, "Z", NULL,  },
    { "multiLine_", NULL, 0x0, "Z", NULL,  },
    { "autoCorrect_", NULL, 0x0, "Z", NULL,  },
    { "password_", NULL, 0x0, "Z", NULL,  },
    { "placeholderTextColor_", NULL, 0x2, "Lcom.sponberg.fluid.layout.Color;", NULL,  },
    { "textEnabledColor_", NULL, 0x2, "Lcom.sponberg.fluid.layout.Color;", NULL,  },
    { "textDisabledColor_", NULL, 0x2, "Lcom.sponberg.fluid.layout.Color;", NULL,  },
    { "enabledKey_", NULL, 0x2, "Ljava.lang.String;", NULL,  },
    { "formattedPlaceholder_", NULL, 0x2, "Ljava.lang.String;", NULL,  },
    { "capitalize_", NULL, 0x2, "Ljava.lang.String;", NULL,  },
    { "androidLineColor_", NULL, 0x2, "Lcom.sponberg.fluid.layout.Color;", NULL,  },
    { "fontFamilyName_", NULL, 0x4, "Ljava.lang.String;", NULL,  },
    { "fontStyle_", NULL, 0x4, "Ljava.lang.String;", NULL,  },
    { "fontSize_", NULL, 0x4, "Ljava.lang.Double;", NULL,  },
  };
  static J2ObjcClassInfo _FFTViewBehaviorTextfield = { "ViewBehaviorTextfield", "com.sponberg.fluid.layout", NULL, 0x1, 39, methods, 25, fields, 0, NULL};
  return &_FFTViewBehaviorTextfield;
}

@end
